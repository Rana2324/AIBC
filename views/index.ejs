<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="/css/styles.css" rel="stylesheet">
    <script src="/socket.io/socket.io.js"></script>
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar">
        <div class="navbar-brand">Ê∏©Â∫¶„Çª„É≥„Çµ„ÉºÁõ£Ë¶ñ„Ç∑„Çπ„ÉÜ„É†</div>
    </nav>

    <!-- Tab Container -->
    <div class="tab-container">
        <div class="tab-nav">
            <button id="sensorTabBtn" class="tab-button" onclick="switchTab('sensorTab', this)">
                <span class="tab-icon">üå°Ô∏è</span>
                <span>„Çª„É≥„Çµ„Éº„Éá„Éº„Çø</span>
            </button>
            <button id="serverTabBtn" class="tab-button" onclick="switchTab('serverTab', this)">
                <span class="tab-icon">üñ•Ô∏è</span>
                <span>„Çµ„Éº„Éê„ÉºÊÉÖÂ†±</span>
            </button>
        </div>

        <!-- Sensor Data Tab -->
        <div id="sensorTab" class="tab-content">
            <div class="sensor-panels">
                <div class="data-container">
                    <div class="section">
                        <h2>„Çª„É≥„Çµ„Éº„Éá„Éº„Çø</h2>
                        <div id="sensor-data">
                            <% if (locals.latestReadings && latestReadings.data) { %>
                                <% latestReadings.data.forEach(reading => { %>
                                    <div class="data-item">
                                        <p>„Çª„É≥„Çµ„ÉºID: <%= reading.sensorId %></p>
                                        <p>Ê∏©Â∫¶: <%= reading.temperature %>¬∞C</p>
                                        <p>„Çø„Ç§„É†„Çπ„Çø„É≥„Éó: <%= new Date(reading.timestamp).toLocaleString() %></p>
                                    </div>
                                <% }); %>
                            <% } else { %>
                                <p>„Éá„Éº„Çø„ÇíË™≠„ÅøËæº„Åø‰∏≠...</p>
                            <% } %>
                        </div>
                    </div>

                    <div class="section">
                        <h2>„Ç¢„É©„Éº„Éà</h2>
                        <div id="alerts">
                            <% if (locals.latestReadings && latestReadings.alerts) { %>
                                <% latestReadings.alerts.forEach(alert => { %>
                                    <div class="alert-item <%= alert.severity %>">
                                        <p>„Çª„É≥„Çµ„ÉºID: <%= alert.sensorId %></p>
                                        <p>„É°„ÉÉ„Çª„Éº„Ç∏: <%= alert.message %></p>
                                        <p>ÈáçË¶ÅÂ∫¶: <%= alert.severity %></p>
                                        <p>„Çø„Ç§„É†„Çπ„Çø„É≥„Éó: <%= new Date(alert.timestamp).toLocaleString() %></p>
                                    </div>
                                <% }); %>
                            <% } else { %>
                                <p>„Ç¢„É©„Éº„Éà„ÇíË™≠„ÅøËæº„Åø‰∏≠...</p>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Server Tab -->
        <div id="serverTab" class="tab-content">
            <div class="server-stats">
                <!-- Personality Comparison -->
                <div class="stat-card personality-comparison">
                    <div class="stat-header">
                        <h3 class="stat-title">
                            <span class="stat-icon">üë•</span>
                            ÂÄãÊÄßÊØîËºÉÂ±•Ê≠¥
                        </h3>
                    </div>
                    <p class="description-text">„Çª„É≥„Çµ„ÉºÈñì„ÅÆÂÄãÊÄß(„Éê„Ç§„Ç¢„Çπ)ÊØîËºÉ„Éá„Éº„Çø</p>
                    <div class="table-wrapper">
                        <table class="data-table">
                            <thead>
                                <tr>
                                    <th>Êó•ÊôÇ</th>
                                    <th>„Çª„É≥„Çµ„ÉºID</th>
                                    <th>„Éê„Ç§„Ç¢„ÇπÂ∑Æ</th>
                                </tr>
                            </thead>
                            <tbody id="personality-comparison">
                                <tr>
                                    <td colspan="3" class="text-center">„Éá„Éº„Çø„Å™„Åó</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- Model Update History -->
                <div class="stat-card model-update">
                    <div class="stat-header">
                        <h3 class="stat-title">
                            <span class="stat-icon">üîÑ</span>
                            Ê®ôÊ∫ñ„É¢„Éá„É´Êõ¥Êñ∞Â±•Ê≠¥
                        </h3>
                    </div>
                    <p class="description-text">Ê∏©Â∫¶‰∫àÊ∏¨„É¢„Éá„É´„ÅÆÊõ¥Êñ∞Ë®òÈå≤</p>
                    <div class="table-wrapper">
                        <table class="data-table">
                            <thead>
                                <tr>
                                    <th>Êó•ÊôÇ</th>
                                    <th>„É¢„Éá„É´„Éê„Éº„Ç∏„Éß„É≥</th>
                                    <th>Êõ¥Êñ∞ÂÜÖÂÆπ</th>
                                </tr>
                            </thead>
                            <tbody id="model-updates">
                                <tr>
                                    <td colspan="3" class="text-center">„Éá„Éº„Çø„Å™„Åó</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- Blockchain/IPFS Records -->
                <div class="stat-card blockchain-ipfs">
                    <div class="stat-header">
                        <h3 class="stat-title">
                            <span class="stat-icon">üîó</span>
                            „Éñ„É≠„ÉÉ„ÇØ„ÉÅ„Çß„Éº„É≥/IPFSÂ±•Ê≠¥
                        </h3>
                    </div>
                    <p class="description-text">ÂàÜÊï£Âè∞Â∏≥„Å∏„ÅÆË®òÈå≤Â±•Ê≠¥</p>
                    <div class="table-wrapper">
                        <table class="data-table">
                            <thead>
                                <tr>
                                    <th>Êó•ÊôÇ</th>
                                    <th>„Çø„Ç§„Éó</th>
                                    <th>„Éè„ÉÉ„Ç∑„É•/CID</th>
                                </tr>
                            </thead>
                            <tbody id="blockchain-records">
                                <tr>
                                    <td colspan="3" class="text-center">„Éá„Éº„Çø„Å™„Åó</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Connection Status -->
    <div id="connectionStatus" class="connection-status connected">
        „Çµ„Éº„Éê„Éº„Å´Êé•Á∂ö‰∏≠
    </div>

    <script src="https://cdn.jsdelivr.net/npm/socket.io-client/dist/socket.io.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/js/layout-scripts.js"></script>
    <script src="/js/sensor-data.js"></script>
    <script>
        const socket = io();
        
        // Handle initial data
        socket.on('initialData', (data) => {
            updateSensorData(data.data);
            updateAlerts(data.alerts);
        });

        // Handle real-time updates
        socket.on('dataUpdate', (data) => {
            updateSensorData(data.sensorData);
            updateAlerts(data.alerts);
        });

        function updateSensorData(data) {
            if (!Array.isArray(data)) return;
            
            const container = document.getElementById('sensor-data');
            container.innerHTML = data.map(reading => `
                <div class="data-item">
                    <p>„Çª„É≥„Çµ„ÉºID: ${reading.sensorId}</p>
                    <p>Ê∏©Â∫¶: ${reading.temperature}¬∞C</p>
                    <p>„Çø„Ç§„É†„Çπ„Çø„É≥„Éó: ${new Date(reading.timestamp).toLocaleString()}</p>
                </div>
            `).join('');
        }

        function updateAlerts(alerts) {
            if (!Array.isArray(alerts)) return;
            
            const container = document.getElementById('alerts');
            container.innerHTML = alerts.map(alert => `
                <div class="alert-item ${alert.severity}">
                    <p>„Çª„É≥„Çµ„ÉºID: ${alert.sensorId}</p>
                    <p>„É°„ÉÉ„Çª„Éº„Ç∏: ${alert.message}</p>
                    <p>ÈáçË¶ÅÂ∫¶: ${alert.severity}</p>
                    <p>„Çø„Ç§„É†„Çπ„Çø„É≥„Éó: ${new Date(alert.timestamp).toLocaleString()}</p>
                </div>
            `).join('');
        }
    </script>
</body>
</html>